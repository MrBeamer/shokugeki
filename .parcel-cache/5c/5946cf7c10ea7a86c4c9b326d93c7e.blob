var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
function _classPrivateFieldGet(receiver, privateMap) {
  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get");
  return _classApplyDescriptorGet(receiver, descriptor);
}
function _classExtractFieldDescriptor(receiver, privateMap, action) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to " + action + " private field on non-instance");
  }
  return privateMap.get(receiver);
}
function _classApplyDescriptorGet(receiver, descriptor) {
  if (descriptor.get) {
    return descriptor.get.call(receiver);
  }
  return descriptor.value;
}
var _parentElement = new WeakMap();
var _query = new WeakMap();
class SearchView {
  constructor() {
    _parentElement.set(this, {
      writable: true,
      value: document.querySelector('.search')
    });
    _query.set(this, {
      writable: true,
      value: ''
    });
  }
  getQuery(event) {
    event.preventDefault();
    const query = document.querySelector('.search__field').value;
    console.log(query);
    return _classPrivateFieldGet(this, _query);
  }
}
exports.default = new SearchView();

var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _urlImgIconsSvg = require('url:../../img/icons.svg');
var _urlImgIconsSvgDefault = _parcelHelpers.interopDefault(_urlImgIconsSvg);
function _classPrivateFieldGet(receiver, privateMap) {
  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get");
  return _classApplyDescriptorGet(receiver, descriptor);
}
function _classExtractFieldDescriptor(receiver, privateMap, action) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to " + action + " private field on non-instance");
  }
  return privateMap.get(receiver);
}
function _classApplyDescriptorGet(receiver, descriptor) {
  if (descriptor.get) {
    return descriptor.get.call(receiver);
  }
  return descriptor.value;
}
var _parentElement = new WeakMap();
var _clear = new WeakSet();
var _generateMarkup = new WeakSet();
// parcel to replace icons with parcel icons, then put in the src of the images html
class SearchResultView {
  constructor() {
    _generateMarkup.add(this);
    _clear.add(this);
    _parentElement.set(this, {
      writable: true,
      value: document.querySelector('.results')
    });
  }
  renderSearchResults(recipes) {
    recipes.forEach(recipe => {
      console.log(recipe);
      const markUp = `  <li class="preview">
          <a class="preview__link preview__link--active" href="#23456">
            <figure class="preview__fig">
              <img src="${recipe.image}" alt="Test" />
            </figure>
            <div class="preview__data">
              <h4 class="preview__title">${recipe.title} ...</h4>
              <p class="preview__publisher">${recipe.publisher}</p>
              <div class="preview__user-generated">
                <svg>
                  <use href="${'test'}.svg#icon-user"></use>
                </svg>
              </div>
            </div>
          </a>
        </li>`;
      _classPrivateFieldGet(this, _parentElement).insertAdjacentHTML('afterbegin', markUp);
    });
  }
}
var _clear2 = function _clear2() {
  _classPrivateFieldGet(this, _parentElement).innerHTML = '';
};
var _generateMarkup2 = function _generateMarkup2() {
  return `  <li class="preview">
      <a class="preview__link preview__link--active" href="#23456">
        <figure class="preview__fig">
          <img src="${recipe.image}" alt="Test" />
        </figure>
        <div class="preview__data">
          <h4 class="preview__title">${recipe.title} ...</h4>
          <p class="preview__publisher">${recipe.publisher}</p>
          <div class="preview__user-generated">
            <svg>
              <use href="${_urlImgIconsSvgDefault.default}.svg#icon-user"></use>
            </svg>
          </div>
        </div>
      </a>
    </li>`;
};
exports.default = new SearchResultView();

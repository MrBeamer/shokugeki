var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _ViewJs = require('./View.js');
var _ViewJsDefault = _parcelHelpers.interopDefault(_ViewJs);
var _urlImgIconsSvg = require('url:../../img/icons.svg');
var _urlImgIconsSvgDefault = _parcelHelpers.interopDefault(_urlImgIconsSvg);
function _defineProperty(obj, key, value) {
  if ((key in obj)) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
// parcel to replace icons with parcel icons, then put in the src of the images html
class SearchResultView extends _ViewJsDefault.default {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "_parentElement", document.querySelector('.results'));
    _defineProperty(this, "_data", void 0);
  }
  renderSearchResults(recipes) {
    this._data = recipes;
    console.log(this._data);
    recipes.forEach(recipe => {
      const markUp = this._generateMarkup(recipe);
      this._parentElement.insertAdjacentHTML('afterbegin', markUp);
    });
  }
  _clear() {
    this._parentElement.innerHTML = '';
  }
  _generateMarkup(recipe) {
    return `  <li class="preview">
      <a class="preview__link preview__link--active" href="#${recipe.id}">
        <figure class="preview__fig">
          <img src="${recipe.image}" alt="Test" />
        </figure>
        <div class="preview__data">
          <h4 class="preview__title">${recipe.title} ...</h4>
          <p class="preview__publisher">${recipe.publisher}</p>
          <div class="preview__user-generated">
            <svg>
              <use href="${_urlImgIconsSvgDefault.default}.svg#icon-user"></use>
            </svg>
          </div>
        </div>
      </a>
    </li>`;
  }
}
exports.default = new SearchResultView();
